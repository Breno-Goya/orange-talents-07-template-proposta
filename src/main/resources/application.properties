#Postgres

spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5433/propostas}
spring.datasource.username=${DB_USERNAME:propostas}
spring.datasource.password=${DB_PASSWORD:123}

#Jpa

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Feign
analise.conta.host=${API_CONTA_URL:http://localhost:8888/}



analise.financeira.host=${API_FINANCEIRA_URL:localhost:9999}
analise.financeira.endpoint=${API_FINANCEIRA_ENDPOINT:/api/solicitacao}

# Schedule (3 min)

periodicidade.associa.cartao=${PERIODICIDADE_ASSOCIA_CARTAO:18000}


# Tempo máximo de resposta para as requisições usando feign

feign.client.config.analisefinanceira-api.read-timeout=100

# Actuator
# Endpoints - Health e Métricas

management.endpoints.web.exposure.include=health, metrics, info, prometheus
management.endpoints.prometheus.enabled=true

management.endpoint.health.show-details=always

# Remove os endpoints sobre variávies de ambiente e beans do sistema

management.endpoints.web.exposure.exclude=env, beans

# spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}

# Jaeger

# Habilita o Jeager
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

opentracing.spring.cloud.jdbc.enabled=false

# Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:propostas}

# Enderço para enviar os metadados
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Envia 10 traces por segundo -> mais seguro
opentracing.jaeger.rate-limiting-sampler.max-traces-per-second=${JAEGER_SAMPLER:10}